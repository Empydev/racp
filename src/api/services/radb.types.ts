/*
 * This file was generated by a tool.
 * Rerun sql-ts to regenerate this file.
 */
export interface AccRegNumEntity {
  accountId?: number;
  index?: number;
  key?: string;
  value?: string;
}
export interface AccRegStrEntity {
  accountId?: number;
  index?: number;
  key?: string;
  value?: string;
}
export interface AchievementEntity {
  charId?: number;
  completed: Date | null;
  count1?: number;
  count10?: number;
  count2?: number;
  count3?: number;
  count4?: number;
  count5?: number;
  count6?: number;
  count7?: number;
  count8?: number;
  count9?: number;
  id: string;
  rewarded: Date | null;
}
export interface AuctionEntity {
  attribute?: number;
  auctionId?: string;
  buyerId?: number;
  buyerName?: string;
  buynow?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  enchantgrade?: number;
  hours?: number;
  itemName?: string;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  price?: number;
  refine?: number;
  sellerId?: number;
  sellerName?: string;
  timestamp?: number;
  type?: number;
  uniqueId?: string;
}
export interface BarterEntity {
  amount: number;
  index: number;
  name?: string;
}
export interface BonusScriptEntity {
  charId: number;
  flag?: number;
  icon?: number;
  script: string;
  tick?: string;
  type?: number;
}
export interface BuyingstoreItemsEntity {
  amount: number;
  buyingstoreId: number;
  index: number;
  itemId: number;
  price: number;
}
export interface BuyingstoresEntity {
  accountId: number;
  autotrade: number;
  bodyDirection?: string;
  charId: number;
  headDirection?: string;
  id: number;
  limit: number;
  map: string;
  sex?: number;
  sit?: string;
  title: string;
  x: number;
  y: number;
}
export interface CartInventoryEntity {
  amount?: number;
  attribute?: number;
  bound?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  charId?: number;
  enchantgrade?: number;
  equip?: number;
  expireTime?: number;
  id?: number;
  identify?: number;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  refine?: number;
  uniqueId?: string;
}
export interface CharEntity {
  accountId?: number;
  agi?: number;
  ap?: number;
  baseExp?: string;
  baseLevel?: number;
  body?: number;
  charId?: number;
  charNum?: number;
  child?: number;
  clanId?: number;
  class?: number;
  clothesColor?: number;
  con?: number;
  crt?: number;
  deleteDate?: number;
  dex?: number;
  elementalId?: number;
  fame?: number;
  father?: number;
  font?: number;
  guildId?: number;
  hair?: number;
  hairColor?: number;
  headBottom?: number;
  headMid?: number;
  headTop?: number;
  homunId?: number;
  hotkeyRowshift?: number;
  hotkeyRowshift2?: number;
  hp?: number;
  int?: number;
  inventorySlots?: number;
  jobExp?: string;
  jobLevel?: number;
  karma?: number;
  lastLogin: Date | null;
  lastMap?: string;
  lastX?: number;
  lastY?: number;
  luk?: number;
  manner?: number;
  maxAp?: number;
  maxHp?: number;
  maxSp?: number;
  mother?: number;
  moves?: number;
  name?: string;
  online?: number;
  option?: number;
  partnerId?: number;
  partyId?: number;
  petId?: number;
  pow?: number;
  rename?: number;
  robe?: number;
  saveMap?: string;
  saveX?: number;
  saveY?: number;
  sex: number;
  shield?: number;
  showEquip?: number;
  skillPoint?: number;
  sp?: number;
  spl?: number;
  sta?: number;
  statusPoint?: number;
  str?: number;
  titleId?: number;
  traitPoint?: number;
  unbanTime?: number;
  uniqueitemCounter?: number;
  vit?: number;
  weapon?: number;
  wis?: number;
  zeny?: number;
}
export interface CharRegNumEntity {
  charId?: number;
  index?: number;
  key?: string;
  value?: string;
}
export interface CharRegStrEntity {
  charId?: number;
  index?: number;
  key?: string;
  value?: string;
}
export interface CharlogEntity {
  accountId?: number;
  agi?: number;
  charMsg?: string;
  charNum?: number;
  dex?: number;
  hair?: number;
  hairColor?: number;
  id?: string;
  int?: number;
  luk?: number;
  name?: string;
  str?: number;
  time: Date;
  vit?: number;
}
export interface ClanEntity {
  clanId?: number;
  mapname?: string;
  master?: string;
  maxMember?: number;
  name?: string;
}
export interface ClanAllianceEntity {
  allianceId?: number;
  clanId?: number;
  name?: string;
  opposition?: number;
}
export interface DbRouletteEntity {
  amount?: number;
  flag?: number;
  index?: number;
  itemId: number;
  level: number;
}
export interface ElementalEntity {
  aspd?: number;
  atk1?: number;
  atk2?: number;
  charId: number;
  class?: number;
  def?: number;
  eleId?: number;
  flee?: number;
  hit?: number;
  hp?: number;
  lifeTime?: string;
  matk?: number;
  maxHp?: number;
  maxSp?: number;
  mdef?: number;
  mode?: number;
  sp?: number;
}
export interface FriendsEntity {
  charId?: number;
  friendId?: number;
}
export interface GlobalAccRegNumEntity {
  accountId?: number;
  index?: number;
  key?: string;
  value?: string;
}
export interface GlobalAccRegStrEntity {
  accountId?: number;
  index?: number;
  key?: string;
  value?: string;
}
export interface GuildEntity {
  averageLv?: number;
  charId?: number;
  connectMember?: number;
  emblemData: unknown | null;
  emblemId?: number;
  emblemLen?: number;
  exp?: string;
  guildId?: number;
  guildLv?: number;
  lastMasterChange: Date | null;
  master?: string;
  maxMember?: number;
  mes1?: string;
  mes2?: string;
  name?: string;
  nextExp?: string;
  skillPoint?: number;
}
export interface GuildAllianceEntity {
  allianceId?: number;
  guildId?: number;
  name?: string;
  opposition?: number;
}
export interface GuildCastleEntity {
  castleId?: number;
  createTime?: number;
  defense?: number;
  economy?: number;
  guildId?: number;
  nextTime?: number;
  payTime?: number;
  triggerD?: number;
  triggerE?: number;
  visibleC?: number;
  visibleG0?: number;
  visibleG1?: number;
  visibleG2?: number;
  visibleG3?: number;
  visibleG4?: number;
  visibleG5?: number;
  visibleG6?: number;
  visibleG7?: number;
}
export interface GuildExpulsionEntity {
  accountId?: number;
  guildId?: number;
  mes?: string;
  name?: string;
}
export interface GuildMemberEntity {
  charId?: number;
  exp?: string;
  guildId?: number;
  position?: number;
}
export interface GuildPositionEntity {
  expMode?: number;
  guildId?: number;
  mode?: number;
  name?: string;
  position?: number;
}
export interface GuildSkillEntity {
  guildId?: number;
  id?: number;
  lv?: number;
}
export interface GuildStorageEntity {
  amount?: number;
  attribute?: number;
  bound?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  enchantgrade?: number;
  equip?: number;
  expireTime?: number;
  guildId?: number;
  id?: number;
  identify?: number;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  refine?: number;
  uniqueId?: string;
}
export interface GuildStorageLogEntity {
  amount?: number;
  attribute?: number;
  bound?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  charId?: number;
  enchantgrade?: number;
  expireTime?: number;
  guildId?: number;
  id?: number;
  identify?: number;
  name?: string;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  refine?: number;
  time: Date;
  uniqueId?: string;
}
export interface HomunculusEntity {
  agi?: number;
  alive?: number;
  autofeed?: number;
  charId: number;
  class?: number;
  dex?: number;
  exp?: string;
  homunId?: number;
  hp?: number;
  hunger?: number;
  int?: number;
  intimacy?: number;
  level?: number;
  luk?: number;
  maxHp?: number;
  maxSp?: number;
  name?: string;
  prevClass?: number;
  renameFlag?: number;
  skillPoint?: number;
  sp?: number;
  str?: number;
  vaporize?: number;
  vit?: number;
}
export interface HotkeyEntity {
  charId: number;
  hotkey: number;
  itemskillId?: number;
  skillLvl?: number;
  type?: number;
}
export interface InterlogEntity {
  id?: number;
  log?: string;
  time: Date;
}
export interface InventoryEntity {
  amount?: number;
  attribute?: number;
  bound?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  charId?: number;
  enchantgrade?: number;
  equip?: number;
  equipSwitch?: number;
  expireTime?: number;
  favorite?: number;
  id?: number;
  identify?: number;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  refine?: number;
  uniqueId?: string;
}
export interface IpbanlistEntity {
  btime: Date;
  list?: string;
  reason?: string;
  rtime: Date;
}
export interface LoginEntity {
  accountId?: number;
  birthdate: Date | null;
  characterSlots?: number;
  email?: string;
  expirationTime?: number;
  groupId?: number;
  lastIp?: string;
  lastlogin: Date | null;
  logincount?: number;
  oldGroup?: number;
  pincode?: string;
  pincodeChange?: number;
  sex?: number;
  state?: number;
  unbanTime?: number;
  userPass?: string;
  userid?: string;
  vipTime?: number;
  webAuthToken: string | null;
  webAuthTokenEnabled?: number;
}
export interface MailEntity {
  destId?: number;
  destName?: string;
  id?: string;
  message?: string;
  sendId?: number;
  sendName?: string;
  status?: number;
  time?: number;
  title?: string;
  type?: number;
  zeny?: number;
}
export interface MailAttachmentsEntity {
  amount?: number;
  attribute?: number;
  bound?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  enchantgrade?: number;
  id?: string;
  identify?: number;
  index?: number;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  refine?: number;
  uniqueId?: string;
}
export interface MapregEntity {
  index?: number;
  value: string;
  varname: string;
}
export interface MarketEntity {
  amount: number;
  flag?: number;
  name?: string;
  nameid: number;
  price: number;
}
export interface MemoEntity {
  charId?: number;
  map?: string;
  memoId?: number;
  x?: number;
  y?: number;
}
export interface MercenaryEntity {
  charId: number;
  class?: number;
  hp?: number;
  killCounter: number;
  lifeTime?: string;
  merId?: number;
  sp?: number;
}
export interface MercenaryOwnerEntity {
  archCalls?: number;
  archFaith?: number;
  charId: number;
  mercId?: number;
  spearCalls?: number;
  spearFaith?: number;
  swordCalls?: number;
  swordFaith?: number;
}
export interface PartyEntity {
  exp?: number;
  item?: number;
  leaderChar?: number;
  leaderId?: number;
  name?: string;
  partyId?: number;
}
export interface PetEntity {
  accountId?: number;
  autofeed?: number;
  charId?: number;
  class?: number;
  eggId?: number;
  equip?: number;
  hungry?: number;
  incubate?: number;
  intimate?: number;
  level?: number;
  name?: string;
  petId?: number;
  renameFlag?: number;
}
export interface QuestEntity {
  charId?: number;
  count1?: number;
  count2?: number;
  count3?: number;
  questId: number;
  state?: number;
  time?: number;
}
export interface SalesEntity {
  amount: number;
  end: Date;
  nameid: number;
  start: Date;
}
export interface ScDataEntity {
  accountId: number;
  charId: number;
  tick: string;
  type: number;
  val1?: number;
  val2?: number;
  val3?: number;
  val4?: number;
}
export interface SkillEntity {
  charId?: number;
  flag?: number;
  id?: number;
  lv?: number;
}
export interface SkillHomunculusEntity {
  homunId: number;
  id: number;
  lv: number;
}
export interface SkillcooldownEntity {
  accountId: number;
  charId: number;
  skill?: number;
  tick: string;
}
export interface StorageEntity {
  accountId?: number;
  amount?: number;
  attribute?: number;
  bound?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  enchantgrade?: number;
  equip?: number;
  expireTime?: number;
  id?: number;
  identify?: number;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  refine?: number;
  uniqueId?: string;
}
export interface VendingItemsEntity {
  amount: number;
  cartinventoryId: number;
  index: number;
  price: number;
  vendingId: number;
}
export interface VendingsEntity {
  accountId: number;
  autotrade: number;
  bodyDirection?: string;
  charId: number;
  headDirection?: string;
  id: number;
  map: string;
  sex?: number;
  sit?: string;
  title: string;
  x: number;
  y: number;
}
export interface AtcommandlogEntity {
  accountId?: number;
  atcommandDate: Date;
  atcommandId?: number;
  charId?: number;
  charName?: string;
  command?: string;
  map?: string;
}
export interface BranchlogEntity {
  accountId?: number;
  branchDate: Date;
  branchId?: number;
  charId?: number;
  charName?: string;
  map?: string;
}
export interface CashlogEntity {
  amount?: number;
  cashType?: number;
  charId?: number;
  id?: number;
  map?: string;
  time: Date;
  type?: number;
}
export interface ChatlogEntity {
  dstCharname?: string;
  id?: string;
  message?: string;
  srcAccountid?: number;
  srcCharid?: number;
  srcMap?: string;
  srcMapX?: number;
  srcMapY?: number;
  time: Date;
  type?: number;
  typeId?: number;
}
export interface FeedinglogEntity {
  charId: number;
  id?: number;
  intimacy: number;
  itemId: number;
  map: string;
  targetClass: number;
  targetId: number;
  time: Date;
  type: number;
  x: number;
  y: number;
}
export interface LoginlogEntity {
  ip?: string;
  log?: string;
  rcode?: number;
  time: Date;
  user?: string;
}
export interface MvplogEntity {
  killCharId?: number;
  map?: string;
  monsterId?: number;
  mvpDate: Date;
  mvpId?: number;
  mvpexp?: string;
  prize?: number;
}
export interface NpclogEntity {
  accountId?: number;
  charId?: number;
  charName?: string;
  map?: string;
  mes?: string;
  npcDate: Date;
  npcId?: number;
}
export interface PicklogEntity {
  amount?: number;
  bound?: number;
  card0?: number;
  card1?: number;
  card2?: number;
  card3?: number;
  charId?: number;
  enchantgrade?: number;
  id?: number;
  map?: string;
  nameid?: number;
  optionId0?: number;
  optionId1?: number;
  optionId2?: number;
  optionId3?: number;
  optionId4?: number;
  optionParm0?: number;
  optionParm1?: number;
  optionParm2?: number;
  optionParm3?: number;
  optionParm4?: number;
  optionVal0?: number;
  optionVal1?: number;
  optionVal2?: number;
  optionVal3?: number;
  optionVal4?: number;
  refine?: number;
  time: Date;
  type?: number;
  uniqueId?: string;
}
export interface ZenylogEntity {
  amount?: number;
  charId?: number;
  id?: number;
  map?: string;
  srcId?: number;
  time: Date;
  type?: number;
}
