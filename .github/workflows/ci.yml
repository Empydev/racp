name: CI
on: ["push"]
jobs:
  build-with-docker:
    name: Build with Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/racp
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/racp:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/racp:buildcache,mode=max

      - name: "Test run RACP"
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/racp
          options: -p 8080:8080
            -p 8081:8081
            -p 3306:3306
            --expose 8080
            --env MYSQL_ROOT_PASSWORD="racp"
            --env MYSQL_ROOT_HOST="%"
            --env MYSQL_USER="racp"
            --env MYSQL_PASSWORD="racp"
            --env MYSQL_DATABASE="racp"
            --env MYSQL_PORT=3306
            --env MYSQL_HOST="127.0.0.1"
            --env ADMIN_USER="admin"
            --env ADMIN_PASSWORD="admin"
            --env hostname=0.0.0.0
            --env jwtSecret="secret"
            --env apiPort=8081
            --env apiBaseUrl="http://127.0.0.1:8081"
            --env adminPermissionName="channel_admin"
          run: yarn configure-rathena && yarn api:prod & yarn app:prod -p 8080
  lint-and-unit-test:
    name: Lint and Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install packages
        run: yarn install

      - name: Test
        run: yarn test

      - name: Lint
        run: yarn lint
