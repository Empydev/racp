/*
* DO NOT EDIT THIS FILE MANUALLY
* This file was generated by a tool.
*/
import * as zod from "zod";
export interface Tables {
    {{#each tables as |table|}}
        {{name}}: {{interfaceName}};
    {{/each}}
}
{{#each tables as |table|}}
    export type {{interfaceName}} = zod.infer<typeof {{interfaceName}}Type>;
    export const {{interfaceName}}Type = zod.object({
    {{#each columns}}
        '{{propertyName}}': zod.{{propertyType}}(){{#if optional}}.optional(){{/if}}{{#if nullable}}.nullable(){{/if}},
    {{/each}}
    });
{{/each}}
{{#each enums as |enum|}}
    export enum {{convertedName}} {
    {{#each values as |value|}}
        '{{value.convertedKey}}' = {{handleNumeric value.value}},
    {{/each}}
    }
{{/each}}